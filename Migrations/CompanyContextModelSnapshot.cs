// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using task1_databases;

#nullable disable

namespace task1_databases.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("task1_databases.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.Property<int>("RoomClassId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomSize")
                        .HasColumnType("integer");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomClassId");

                    b.ToTable("Rooms", (string)null);

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            IsFree = true,
                            RoomClassId = 1,
                            RoomSize = 2
                        },
                        new
                        {
                            RoomId = 2,
                            IsFree = false,
                            RoomClassId = 1,
                            RoomSize = 1
                        },
                        new
                        {
                            RoomId = 3,
                            IsFree = false,
                            RoomClassId = 2,
                            RoomSize = 3
                        },
                        new
                        {
                            RoomId = 4,
                            IsFree = false,
                            RoomClassId = 2,
                            RoomSize = 1
                        },
                        new
                        {
                            RoomId = 5,
                            IsFree = false,
                            RoomClassId = 3,
                            RoomSize = 2
                        },
                        new
                        {
                            RoomId = 6,
                            IsFree = true,
                            RoomClassId = 3,
                            RoomSize = 3
                        });
                });

            modelBuilder.Entity("task1_databases.RoomClass", b =>
                {
                    b.Property<int>("RoomClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomClassId"));

                    b.Property<string>("ClassOfRoom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("RoomClassId");

                    b.ToTable("RoomClasses", (string)null);

                    b.HasData(
                        new
                        {
                            RoomClassId = 1,
                            ClassOfRoom = "Эконом",
                            Price = 2000
                        },
                        new
                        {
                            RoomClassId = 2,
                            ClassOfRoom = "Бизнес",
                            Price = 3000
                        },
                        new
                        {
                            RoomClassId = 3,
                            ClassOfRoom = "Люкс",
                            Price = 5000
                        });
                });

            modelBuilder.Entity("task1_databases.Room", b =>
                {
                    b.HasOne("task1_databases.RoomClass", "RoomClass")
                        .WithMany()
                        .HasForeignKey("RoomClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomClass");
                });
#pragma warning restore 612, 618
        }
    }
}
